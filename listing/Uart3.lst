C51 COMPILER V9.60.0.0   UART3                                                             02/28/2021 16:24:52 PAGE 1   


C51 COMPILER V9.60.0.0, COMPILATION OF MODULE UART3
OBJECT MODULE PLACED IN ..\Output\Uart3.obj
COMPILER INVOKED BY: C:\Keil_v5\MDK\C51\BIN\C51.EXE ..\SourceProgram\Uart3.c LARGE OPTIMIZE(8,SPEED) BROWSE INCDIR(..\So
                    -urceProgram;..\SDK) DEBUG OBJECTEXTEND PRINT(..\listing\Uart3.lst) TABS(2) OBJECT(..\Output\Uart3.obj)

line level    source

   1          #include "Uart3.H"
   2          #include "wifi.h"
   3          /**********************宏定义******************************/
   4          #define T2R     0x10              //AUXR.4    定时器T2运行控制位
   5          #define S1ST2   0x01              //AUXR.0    选择定时器T2作为串口2波特率发生器
   6          #define ET2   0x04                //TE2.2   定时器T2中断允许位
   7          
   8          #define S3SM0   0x00              //S3CON.7  串行口3工作方式为8位UART，波特率可变
   9          //#define S3SM0   0x80              //S3CON.7  串行口3工作方式为9位UART，波特率可变
  10          #define S3ST3   0x00              //S3CON.6  串行口3选择定时器2作为其波特率发生器
  11          //#define S3ST3   0x40              //S3CON.6  串行口3选择定时器3作为其波特率发生器
  12          #define S3REN   0x10              //S3CON.4  允许/禁止串行口3接收控制位
  13          #define S3TI    0x02              //S3CON.1  发送中断请求中断标志位
  14          #define S3RI    0x01              //S3CON.0  接收中断请求中断标志位
  15          
  16          #define ES3     0x08              //IE2.3    串行口3中断允许位
  17          #define S3_S  0x00                //P_SW2.1  外围设备切换控制器2     串口3在P0.0/RXD3   P0.1/TXD3
  18          //#define S3_S  0x02                //P_SW2.1  外围设备切换控制器2     串口3在P5.0/RXD3_2   P5.1/TXD3_2
  19          
  20          /*********************变量定义****************************/
  21          uchar Uart3_Receive_i = 0;        //定义串行口3接收数据变量且赋值为0
  22          bit Uart3_Receive_Flag = 0;       //定义串行口3接收数据完成标志位变量且赋值为0
  23          bit B_TX3_Busy;                   //发送忙标志
  24          /****************************************************************************************************
  25          /*函数：void Uart3_Init(void)        //@11.0592MHz
  26          /*功能：串行口3使用定时器T2作为波特率发生器初始化函数
  27          /*说明：
  28          /*修改日期：2021-02-23
  29          /*作者：华南理工大学广州学院电工电子创新实验室――叶成彬  
  30          /****************************************************************************************************/
  31          void Uart3_Init(void)
  32          {
  33   1        P_SW2 &= S3_S;         //串口3在P0.0/RXD3   P0.1/TXD3
  34   1        S3CON = 0x00;                           
  35   1        S3CON |= S3SM0;        //S3CON.7  串行口3工作方式为8位UART，波特率可变
  36   1        S3CON |= S3ST3;        //S3CON.6  串行口3选择定时器T2作为其波特率发生器
  37   1        T2L = 0xE8;   
  38   1        T2H = 0xFF;            //设定定时初值，波特率9600
  39   1        AUXR &= 0xFB;          //定时器T2时钟为Fosc/12,即12T
  40   1        AUXR |= S1ST2;         //串行口3选择定时器2为波特率发生器
  41   1        AUXR |= T2R;           //启动定时器T2
  42   1        IE2 &= ~ET2;           //禁止定时器T2中断
  43   1      
  44   1        IE2  |= ES3;           //IE2.3    串行口3中断允许位
  45   1        S3CON &= ~S3REN;       //S3CON.4  禁止串行口3接收控制位
  46   1        S3CON |= S3REN;        //S3CON.4  允许串行口3接收控制位
  47   1        S3CON &= ~S3RI;        //S3CON.0  清除接收中断请求中断标志位
  48   1      
  49   1        EA = 1;                //开启单片机总中断
  50   1      }
  51          
  52          /****************************************************************************************************
  53          /*函数：void Uart3_SendData(uchar dat)         //@11.0592MHz
  54          /*功能：串行口3发送数据函数
C51 COMPILER V9.60.0.0   UART3                                                             02/28/2021 16:24:52 PAGE 2   

  55          /*说明：
  56          /*修改日期：2017-01-05
  57          /*作者：华南理工大学广州学院电工电子创新实验室――叶成彬  
  58          /****************************************************************************************************/
  59          void Uart3_SendData(uchar dat)
  60          {
  61   1        B_TX3_Busy = 1;
  62   1        S3BUF = dat;            //写数据到UART数据寄存器
  63   1        while(B_TX3_Busy);      //等待数据发送结束
  64   1      }
  65          
  66          /****************************************************************************************************
  67          /*函数：void Uart3_SendString(uchar *s)    //@11.0592MHz
  68          /*功能：串行口3发送字符串函数
  69          /*说明：
  70          /*修改日期：2017-01-05
  71          /*作者：华南理工大学广州学院电工电子创新实验室――叶成彬  
  72          /****************************************************************************************************/
  73          void Uart3_SendString(uchar *s)
  74          {
  75   1          while(*s)                  //检测字符串结束标志
  76   1          {
  77   2            Uart3_SendData(*s++);         //发送当前字符
  78   2          }
  79   1      }
  80          /****************************************************************************************************
  81          /*函数：void Uart3_Receive() interrupt 17      //@11.0592MHz
  82          /*功能：串行口3接收收据中断服务函数
  83          /*说明：
  84          /*修改日期：2021-02-26
  85          /*作者：华南理工大学广州学院电工电子创新实验室――陈凌峰
  86          /****************************************************************************************************/
  87          void Uart3_Receive() interrupt 17
  88          {
  89   1          if (S3CON & S3RI)                           //判断是否接收到数据
  90   1          {
  91   2            S3CON &= ~S3RI;                           //清除S3RI
  92   2            Uart3_Receive_i = S3BUF;                  //变量Uart3_Receive_i存储串行口3缓冲器S3BUF数据
  93   2            Uart3_Receive_Flag = 1;                   //串行口3接收到完整的数据标志位置1  
  94   2            uart_receive_input(Uart3_Receive_i);      //WIFI模块串口接收数据暂存处理
  95   2        }
  96   1      
  97   1        if( S3CON & S3TI )                            //判断数据是否发送完成
  98   1          {
  99   2            S3CON &= ~S3TI;                           //清除S3TI位
 100   2            B_TX3_Busy = 0;
 101   2          }         
 102   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    185    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =      1       3
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =      2    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
